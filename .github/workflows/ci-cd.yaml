name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3 

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f ./api-gateway/Dockerfile ./api-gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest -f ./auth-service/Dockerfile ./auth-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest -f ./user-service/Dockerfile ./user-service

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
      - name: Pull Docker image and run container
        run: |
          ssh -T -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "Pulling latest Docker images on EC2"
            docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/user-service:latest

            echo "Stopping old containers"
            docker stop api-gateway || true
            docker stop auth-service || true
            docker stop user-service || true

            echo "Removing old containers"
            docker rm api-gateway || true
            docker rm auth-service || true
            docker rm user-service || true

            echo "Starting new containers"
            docker run -d --name api-gateway -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
            docker run -d --name auth-service -p 4000:4000 ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker run -d --name user-service -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/user-service:latest
          EOF
